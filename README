NAME
    Tags::HTML::Form - Tags helper for form.

SYNOPSIS
     use Tags::HTML::Form;

     my $obj = Tags::HTML::Form->new(%params);
     $obj->process;
     $obj->process_css;

METHODS
  "new"
     my $obj = Tags::HTML::Form->new(%params);

    Constructor.

    *       "css"

            'CSS::Struct::Output' object for process_css processing.

            Default value is undef.

    *       "fields"

            Array of form items.

            All items must be a 'Data::HTML::Form::Input' objects.

    *       "form"

            Data object for form.

            Could ve a 'Data::HTML::Form' instance.

            Default value is instance with 'form' css class.

    *       "submit"

            Data object for submit.

            Could be a 'Data::HTML::Form::Input' or 'Data::HTML::Button'
            instance.

            Default value is instance with 'Save' submit value.

    *       "tags"

            'Tags::Output' object.

            Default value is undef.

  "process"
     $obj->process;

    Process Tags structure for output with form.

    Returns undef.

  "process_css"
     $obj->process_css;

    Process CSS::Struct structure for output.

    Returns undef.

ERRORS
     new():
             From Class::Utils::set_params():
                     Unknown parameter '%s'.
             From Tags::HTML::new():
                     Parameter 'tags' must be a 'Tags::Output::*' class.
             Parameter 'fields' is required.
             Parameter 'fields' item must be a 'Data::HTML::Form::Input' instance.
             Parameter 'fields' must be a array.
             Parameter 'form' is required.
             Parameter 'form' must be a 'Data::HTML::Form' instance.
             Parameter 'submit' instance has bad type.
             Parameter 'submit' is required.
             Parameter 'submit' must be a 'Data::HTML::Form::Input' instance.

     process():
             From Tags::HTML::process():
                     Parameter 'tags' isn't defined.

EXAMPLE
     use strict;
     use warnings;

     use CSS::Struct::Output::Indent;
     use Tags::HTML::Form;
     use Tags::Output::Indent;

     # Object.
     my $css = CSS::Struct::Output::Indent->new;
     my $tags = Tags::Output::Indent->new;
     my $obj = Tags::HTML::Form->new(
             'css' => $css,
             'tags' => $tags,
     );

     # Process pager.
     $obj->process;
     $obj->process_css;

     # Print out.
     print $tags->flush;
     print "\n\n";
     print $css->flush;

     # Output:
     # <form class="form" method="GET">
     #   <p>
     #     <button type="submit">
     #       Save
     #     </button>
     #   </p>
     # </form>
     # 
     # .form {
     # }

DEPENDENCIES
    Class::Utils, Data::HTML::Form, Data::HTML::Button, Error::Pure,
    Scalar::Util, Tags::HTML.

REPOSITORY
    <https://github.com/michal-josef-spacek/Tags-HTML-Form>

AUTHOR
    Michal Josef Špaček <mailto:skim@cpan.org>

    <http://skim.cz>

LICENSE AND COPYRIGHT
    © 2022 Michal Josef Špaček

    BSD 2-Clause License

VERSION
    0.01

